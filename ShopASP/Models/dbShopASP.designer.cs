#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ShopASP.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="shopasp")]
	public partial class dbShopASPDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertaccount(account instance);
    partial void Updateaccount(account instance);
    partial void Deleteaccount(account instance);
    partial void Insertsize(size instance);
    partial void Updatesize(size instance);
    partial void Deletesize(size instance);
    partial void Insertcategory(category instance);
    partial void Updatecategory(category instance);
    partial void Deletecategory(category instance);
    partial void Insertcolor(color instance);
    partial void Updatecolor(color instance);
    partial void Deletecolor(color instance);
    partial void Insertemployee(employee instance);
    partial void Updateemployee(employee instance);
    partial void Deleteemployee(employee instance);
    partial void Insertlog_change_product(log_change_product instance);
    partial void Updatelog_change_product(log_change_product instance);
    partial void Deletelog_change_product(log_change_product instance);
    partial void Insertproduct(product instance);
    partial void Updateproduct(product instance);
    partial void Deleteproduct(product instance);
    partial void Insertcustomer(customer instance);
    partial void Updatecustomer(customer instance);
    partial void Deletecustomer(customer instance);
    partial void Insertcart(cart instance);
    partial void Updatecart(cart instance);
    partial void Deletecart(cart instance);
    partial void Insertbill(bill instance);
    partial void Updatebill(bill instance);
    partial void Deletebill(bill instance);
    #endregion
		
		public dbShopASPDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["shopaspConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public dbShopASPDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbShopASPDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbShopASPDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbShopASPDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<account> accounts
		{
			get
			{
				return this.GetTable<account>();
			}
		}
		
		public System.Data.Linq.Table<size> sizes
		{
			get
			{
				return this.GetTable<size>();
			}
		}
		
		public System.Data.Linq.Table<category> categories
		{
			get
			{
				return this.GetTable<category>();
			}
		}
		
		public System.Data.Linq.Table<color> colors
		{
			get
			{
				return this.GetTable<color>();
			}
		}
		
		public System.Data.Linq.Table<customer_img> customer_imgs
		{
			get
			{
				return this.GetTable<customer_img>();
			}
		}
		
		public System.Data.Linq.Table<employee> employees
		{
			get
			{
				return this.GetTable<employee>();
			}
		}
		
		public System.Data.Linq.Table<employee_img> employee_imgs
		{
			get
			{
				return this.GetTable<employee_img>();
			}
		}
		
		public System.Data.Linq.Table<history_change_product> history_change_products
		{
			get
			{
				return this.GetTable<history_change_product>();
			}
		}
		
		public System.Data.Linq.Table<log_change_product> log_change_products
		{
			get
			{
				return this.GetTable<log_change_product>();
			}
		}
		
		public System.Data.Linq.Table<log_payment> log_payments
		{
			get
			{
				return this.GetTable<log_payment>();
			}
		}
		
		public System.Data.Linq.Table<product> products
		{
			get
			{
				return this.GetTable<product>();
			}
		}
		
		public System.Data.Linq.Table<product_detail> product_details
		{
			get
			{
				return this.GetTable<product_detail>();
			}
		}
		
		public System.Data.Linq.Table<product_img> product_imgs
		{
			get
			{
				return this.GetTable<product_img>();
			}
		}
		
		public System.Data.Linq.Table<customer> customers
		{
			get
			{
				return this.GetTable<customer>();
			}
		}
		
		public System.Data.Linq.Table<cart_detail> cart_details
		{
			get
			{
				return this.GetTable<cart_detail>();
			}
		}
		
		public System.Data.Linq.Table<cart> carts
		{
			get
			{
				return this.GetTable<cart>();
			}
		}
		
		public System.Data.Linq.Table<bill> bills
		{
			get
			{
				return this.GetTable<bill>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.account")]
	public partial class account : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _account_id;
		
		private string _account_username;
		
		private string _account_password;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onaccount_idChanging(int value);
    partial void Onaccount_idChanged();
    partial void Onaccount_usernameChanging(string value);
    partial void Onaccount_usernameChanged();
    partial void Onaccount_passwordChanging(string value);
    partial void Onaccount_passwordChanged();
    #endregion
		
		public account()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_account_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int account_id
		{
			get
			{
				return this._account_id;
			}
			set
			{
				if ((this._account_id != value))
				{
					this.Onaccount_idChanging(value);
					this.SendPropertyChanging();
					this._account_id = value;
					this.SendPropertyChanged("account_id");
					this.Onaccount_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_account_username", DbType="VarChar(35)")]
		public string account_username
		{
			get
			{
				return this._account_username;
			}
			set
			{
				if ((this._account_username != value))
				{
					this.Onaccount_usernameChanging(value);
					this.SendPropertyChanging();
					this._account_username = value;
					this.SendPropertyChanged("account_username");
					this.Onaccount_usernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_account_password", DbType="VarChar(65)")]
		public string account_password
		{
			get
			{
				return this._account_password;
			}
			set
			{
				if ((this._account_password != value))
				{
					this.Onaccount_passwordChanging(value);
					this.SendPropertyChanging();
					this._account_password = value;
					this.SendPropertyChanged("account_password");
					this.Onaccount_passwordChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.size")]
	public partial class size : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _size_id;
		
		private string _size_name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onsize_idChanging(int value);
    partial void Onsize_idChanged();
    partial void Onsize_nameChanging(string value);
    partial void Onsize_nameChanged();
    #endregion
		
		public size()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_size_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int size_id
		{
			get
			{
				return this._size_id;
			}
			set
			{
				if ((this._size_id != value))
				{
					this.Onsize_idChanging(value);
					this.SendPropertyChanging();
					this._size_id = value;
					this.SendPropertyChanged("size_id");
					this.Onsize_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_size_name", DbType="NVarChar(30)")]
		public string size_name
		{
			get
			{
				return this._size_name;
			}
			set
			{
				if ((this._size_name != value))
				{
					this.Onsize_nameChanging(value);
					this.SendPropertyChanging();
					this._size_name = value;
					this.SendPropertyChanged("size_name");
					this.Onsize_nameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.category")]
	public partial class category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _category_id;
		
		private string _category_name;
		
		private string _category_decrible;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncategory_idChanging(int value);
    partial void Oncategory_idChanged();
    partial void Oncategory_nameChanging(string value);
    partial void Oncategory_nameChanged();
    partial void Oncategory_decribleChanging(string value);
    partial void Oncategory_decribleChanged();
    #endregion
		
		public category()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_category_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int category_id
		{
			get
			{
				return this._category_id;
			}
			set
			{
				if ((this._category_id != value))
				{
					this.Oncategory_idChanging(value);
					this.SendPropertyChanging();
					this._category_id = value;
					this.SendPropertyChanged("category_id");
					this.Oncategory_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_category_name", DbType="NVarChar(MAX)")]
		public string category_name
		{
			get
			{
				return this._category_name;
			}
			set
			{
				if ((this._category_name != value))
				{
					this.Oncategory_nameChanging(value);
					this.SendPropertyChanging();
					this._category_name = value;
					this.SendPropertyChanged("category_name");
					this.Oncategory_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_category_decrible", DbType="NVarChar(MAX)")]
		public string category_decrible
		{
			get
			{
				return this._category_decrible;
			}
			set
			{
				if ((this._category_decrible != value))
				{
					this.Oncategory_decribleChanging(value);
					this.SendPropertyChanging();
					this._category_decrible = value;
					this.SendPropertyChanged("category_decrible");
					this.Oncategory_decribleChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.color")]
	public partial class color : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _color_id;
		
		private string _color_name;
		
		private string _color_hex;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncolor_idChanging(int value);
    partial void Oncolor_idChanged();
    partial void Oncolor_nameChanging(string value);
    partial void Oncolor_nameChanged();
    partial void Oncolor_hexChanging(string value);
    partial void Oncolor_hexChanged();
    #endregion
		
		public color()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_color_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int color_id
		{
			get
			{
				return this._color_id;
			}
			set
			{
				if ((this._color_id != value))
				{
					this.Oncolor_idChanging(value);
					this.SendPropertyChanging();
					this._color_id = value;
					this.SendPropertyChanged("color_id");
					this.Oncolor_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_color_name", DbType="NVarChar(50)")]
		public string color_name
		{
			get
			{
				return this._color_name;
			}
			set
			{
				if ((this._color_name != value))
				{
					this.Oncolor_nameChanging(value);
					this.SendPropertyChanging();
					this._color_name = value;
					this.SendPropertyChanged("color_name");
					this.Oncolor_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_color_hex", DbType="VarChar(10)")]
		public string color_hex
		{
			get
			{
				return this._color_hex;
			}
			set
			{
				if ((this._color_hex != value))
				{
					this.Oncolor_hexChanging(value);
					this.SendPropertyChanging();
					this._color_hex = value;
					this.SendPropertyChanged("color_hex");
					this.Oncolor_hexChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.customer_img")]
	public partial class customer_img
	{
		
		private int _customer_id;
		
		private string _customer_img_path;
		
		public customer_img()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_id", DbType="Int NOT NULL")]
		public int customer_id
		{
			get
			{
				return this._customer_id;
			}
			set
			{
				if ((this._customer_id != value))
				{
					this._customer_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_img_path", DbType="VarChar(MAX)")]
		public string customer_img_path
		{
			get
			{
				return this._customer_img_path;
			}
			set
			{
				if ((this._customer_img_path != value))
				{
					this._customer_img_path = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.employee")]
	public partial class employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _employee_id;
		
		private string _employee_name;
		
		private string _employee_dob;
		
		private System.Nullable<bool> _employee_gender;
		
		private string _employee_address;
		
		private string _employee_email;
		
		private string _employee_phone;
		
		private string _employee_password;
		
		private System.Nullable<byte> _employee_role;
		
		private EntitySet<log_change_product> _log_change_products;
		
		private EntitySet<bill> _bills;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onemployee_idChanging(int value);
    partial void Onemployee_idChanged();
    partial void Onemployee_nameChanging(string value);
    partial void Onemployee_nameChanged();
    partial void Onemployee_dobChanging(string value);
    partial void Onemployee_dobChanged();
    partial void Onemployee_genderChanging(System.Nullable<bool> value);
    partial void Onemployee_genderChanged();
    partial void Onemployee_addressChanging(string value);
    partial void Onemployee_addressChanged();
    partial void Onemployee_emailChanging(string value);
    partial void Onemployee_emailChanged();
    partial void Onemployee_phoneChanging(string value);
    partial void Onemployee_phoneChanged();
    partial void Onemployee_passwordChanging(string value);
    partial void Onemployee_passwordChanged();
    partial void Onemployee_roleChanging(System.Nullable<byte> value);
    partial void Onemployee_roleChanged();
    #endregion
		
		public employee()
		{
			this._log_change_products = new EntitySet<log_change_product>(new Action<log_change_product>(this.attach_log_change_products), new Action<log_change_product>(this.detach_log_change_products));
			this._bills = new EntitySet<bill>(new Action<bill>(this.attach_bills), new Action<bill>(this.detach_bills));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employee_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int employee_id
		{
			get
			{
				return this._employee_id;
			}
			set
			{
				if ((this._employee_id != value))
				{
					this.Onemployee_idChanging(value);
					this.SendPropertyChanging();
					this._employee_id = value;
					this.SendPropertyChanged("employee_id");
					this.Onemployee_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employee_name", DbType="NVarChar(100)")]
		public string employee_name
		{
			get
			{
				return this._employee_name;
			}
			set
			{
				if ((this._employee_name != value))
				{
					this.Onemployee_nameChanging(value);
					this.SendPropertyChanging();
					this._employee_name = value;
					this.SendPropertyChanged("employee_name");
					this.Onemployee_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employee_dob", DbType="VarChar(10)")]
		public string employee_dob
		{
			get
			{
				return this._employee_dob;
			}
			set
			{
				if ((this._employee_dob != value))
				{
					this.Onemployee_dobChanging(value);
					this.SendPropertyChanging();
					this._employee_dob = value;
					this.SendPropertyChanged("employee_dob");
					this.Onemployee_dobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employee_gender", DbType="Bit")]
		public System.Nullable<bool> employee_gender
		{
			get
			{
				return this._employee_gender;
			}
			set
			{
				if ((this._employee_gender != value))
				{
					this.Onemployee_genderChanging(value);
					this.SendPropertyChanging();
					this._employee_gender = value;
					this.SendPropertyChanged("employee_gender");
					this.Onemployee_genderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employee_address", DbType="NVarChar(200)")]
		public string employee_address
		{
			get
			{
				return this._employee_address;
			}
			set
			{
				if ((this._employee_address != value))
				{
					this.Onemployee_addressChanging(value);
					this.SendPropertyChanging();
					this._employee_address = value;
					this.SendPropertyChanged("employee_address");
					this.Onemployee_addressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employee_email", DbType="VarChar(200)")]
		public string employee_email
		{
			get
			{
				return this._employee_email;
			}
			set
			{
				if ((this._employee_email != value))
				{
					this.Onemployee_emailChanging(value);
					this.SendPropertyChanging();
					this._employee_email = value;
					this.SendPropertyChanged("employee_email");
					this.Onemployee_emailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employee_phone", DbType="VarChar(15)")]
		public string employee_phone
		{
			get
			{
				return this._employee_phone;
			}
			set
			{
				if ((this._employee_phone != value))
				{
					this.Onemployee_phoneChanging(value);
					this.SendPropertyChanging();
					this._employee_phone = value;
					this.SendPropertyChanged("employee_phone");
					this.Onemployee_phoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employee_password", DbType="NVarChar(100)")]
		public string employee_password
		{
			get
			{
				return this._employee_password;
			}
			set
			{
				if ((this._employee_password != value))
				{
					this.Onemployee_passwordChanging(value);
					this.SendPropertyChanging();
					this._employee_password = value;
					this.SendPropertyChanged("employee_password");
					this.Onemployee_passwordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employee_role", DbType="TinyInt")]
		public System.Nullable<byte> employee_role
		{
			get
			{
				return this._employee_role;
			}
			set
			{
				if ((this._employee_role != value))
				{
					this.Onemployee_roleChanging(value);
					this.SendPropertyChanging();
					this._employee_role = value;
					this.SendPropertyChanged("employee_role");
					this.Onemployee_roleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="employee_log_change_product", Storage="_log_change_products", ThisKey="employee_id", OtherKey="employee_id")]
		public EntitySet<log_change_product> log_change_products
		{
			get
			{
				return this._log_change_products;
			}
			set
			{
				this._log_change_products.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="employee_bill", Storage="_bills", ThisKey="employee_id", OtherKey="employee_id")]
		public EntitySet<bill> bills
		{
			get
			{
				return this._bills;
			}
			set
			{
				this._bills.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_log_change_products(log_change_product entity)
		{
			this.SendPropertyChanging();
			entity.employee = this;
		}
		
		private void detach_log_change_products(log_change_product entity)
		{
			this.SendPropertyChanging();
			entity.employee = null;
		}
		
		private void attach_bills(bill entity)
		{
			this.SendPropertyChanging();
			entity.employee = this;
		}
		
		private void detach_bills(bill entity)
		{
			this.SendPropertyChanging();
			entity.employee = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.employee_img")]
	public partial class employee_img
	{
		
		private int _employee_id;
		
		private string _employee_img_path;
		
		public employee_img()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employee_id", DbType="Int NOT NULL")]
		public int employee_id
		{
			get
			{
				return this._employee_id;
			}
			set
			{
				if ((this._employee_id != value))
				{
					this._employee_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employee_img_path", DbType="VarChar(MAX)")]
		public string employee_img_path
		{
			get
			{
				return this._employee_img_path;
			}
			set
			{
				if ((this._employee_img_path != value))
				{
					this._employee_img_path = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.history_change_product")]
	public partial class history_change_product
	{
		
		private int _id;
		
		public history_change_product()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL")]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.log_change_product")]
	public partial class log_change_product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<System.DateTime> _time_create;
		
		private int _employee_id;
		
		private int _product_id;
		
		private EntityRef<employee> _employee;
		
		private EntityRef<product> _product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Ontime_createChanging(System.Nullable<System.DateTime> value);
    partial void Ontime_createChanged();
    partial void Onemployee_idChanging(int value);
    partial void Onemployee_idChanged();
    partial void Onproduct_idChanging(int value);
    partial void Onproduct_idChanged();
    #endregion
		
		public log_change_product()
		{
			this._employee = default(EntityRef<employee>);
			this._product = default(EntityRef<product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time_create", DbType="DateTime")]
		public System.Nullable<System.DateTime> time_create
		{
			get
			{
				return this._time_create;
			}
			set
			{
				if ((this._time_create != value))
				{
					this.Ontime_createChanging(value);
					this.SendPropertyChanging();
					this._time_create = value;
					this.SendPropertyChanged("time_create");
					this.Ontime_createChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employee_id", DbType="Int NOT NULL")]
		public int employee_id
		{
			get
			{
				return this._employee_id;
			}
			set
			{
				if ((this._employee_id != value))
				{
					if (this._employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onemployee_idChanging(value);
					this.SendPropertyChanging();
					this._employee_id = value;
					this.SendPropertyChanged("employee_id");
					this.Onemployee_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_product_id", DbType="Int NOT NULL")]
		public int product_id
		{
			get
			{
				return this._product_id;
			}
			set
			{
				if ((this._product_id != value))
				{
					if (this._product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onproduct_idChanging(value);
					this.SendPropertyChanging();
					this._product_id = value;
					this.SendPropertyChanged("product_id");
					this.Onproduct_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="employee_log_change_product", Storage="_employee", ThisKey="employee_id", OtherKey="employee_id", IsForeignKey=true)]
		public employee employee
		{
			get
			{
				return this._employee.Entity;
			}
			set
			{
				employee previousValue = this._employee.Entity;
				if (((previousValue != value) 
							|| (this._employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._employee.Entity = null;
						previousValue.log_change_products.Remove(this);
					}
					this._employee.Entity = value;
					if ((value != null))
					{
						value.log_change_products.Add(this);
						this._employee_id = value.employee_id;
					}
					else
					{
						this._employee_id = default(int);
					}
					this.SendPropertyChanged("employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_log_change_product", Storage="_product", ThisKey="product_id", OtherKey="product_id", IsForeignKey=true)]
		public product product
		{
			get
			{
				return this._product.Entity;
			}
			set
			{
				product previousValue = this._product.Entity;
				if (((previousValue != value) 
							|| (this._product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._product.Entity = null;
						previousValue.log_change_products.Remove(this);
					}
					this._product.Entity = value;
					if ((value != null))
					{
						value.log_change_products.Add(this);
						this._product_id = value.product_id;
					}
					else
					{
						this._product_id = default(int);
					}
					this.SendPropertyChanged("product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.log_payment")]
	public partial class log_payment
	{
		
		private int _bill_id;
		
		private System.Nullable<System.DateTime> _time_create;
		
		public log_payment()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bill_id", DbType="Int NOT NULL")]
		public int bill_id
		{
			get
			{
				return this._bill_id;
			}
			set
			{
				if ((this._bill_id != value))
				{
					this._bill_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time_create", DbType="DateTime")]
		public System.Nullable<System.DateTime> time_create
		{
			get
			{
				return this._time_create;
			}
			set
			{
				if ((this._time_create != value))
				{
					this._time_create = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.product")]
	public partial class product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _product_id;
		
		private System.Nullable<int> _product_quantum;
		
		private System.Nullable<double> _product_price;
		
		private EntitySet<log_change_product> _log_change_products;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onproduct_idChanging(int value);
    partial void Onproduct_idChanged();
    partial void Onproduct_quantumChanging(System.Nullable<int> value);
    partial void Onproduct_quantumChanged();
    partial void Onproduct_priceChanging(System.Nullable<double> value);
    partial void Onproduct_priceChanged();
    #endregion
		
		public product()
		{
			this._log_change_products = new EntitySet<log_change_product>(new Action<log_change_product>(this.attach_log_change_products), new Action<log_change_product>(this.detach_log_change_products));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_product_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int product_id
		{
			get
			{
				return this._product_id;
			}
			set
			{
				if ((this._product_id != value))
				{
					this.Onproduct_idChanging(value);
					this.SendPropertyChanging();
					this._product_id = value;
					this.SendPropertyChanged("product_id");
					this.Onproduct_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_product_quantum", DbType="Int")]
		public System.Nullable<int> product_quantum
		{
			get
			{
				return this._product_quantum;
			}
			set
			{
				if ((this._product_quantum != value))
				{
					this.Onproduct_quantumChanging(value);
					this.SendPropertyChanging();
					this._product_quantum = value;
					this.SendPropertyChanged("product_quantum");
					this.Onproduct_quantumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_product_price", DbType="Float")]
		public System.Nullable<double> product_price
		{
			get
			{
				return this._product_price;
			}
			set
			{
				if ((this._product_price != value))
				{
					this.Onproduct_priceChanging(value);
					this.SendPropertyChanging();
					this._product_price = value;
					this.SendPropertyChanged("product_price");
					this.Onproduct_priceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_log_change_product", Storage="_log_change_products", ThisKey="product_id", OtherKey="product_id")]
		public EntitySet<log_change_product> log_change_products
		{
			get
			{
				return this._log_change_products;
			}
			set
			{
				this._log_change_products.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_log_change_products(log_change_product entity)
		{
			this.SendPropertyChanging();
			entity.product = this;
		}
		
		private void detach_log_change_products(log_change_product entity)
		{
			this.SendPropertyChanging();
			entity.product = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.product_detail")]
	public partial class product_detail
	{
		
		private int _product_id;
		
		private string _product_name;
		
		private string _product_tag;
		
		private string _product_decrible;
		
		public product_detail()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_product_id", DbType="Int NOT NULL")]
		public int product_id
		{
			get
			{
				return this._product_id;
			}
			set
			{
				if ((this._product_id != value))
				{
					this._product_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_product_name", DbType="NVarChar(MAX)")]
		public string product_name
		{
			get
			{
				return this._product_name;
			}
			set
			{
				if ((this._product_name != value))
				{
					this._product_name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_product_tag", DbType="VarChar(MAX)")]
		public string product_tag
		{
			get
			{
				return this._product_tag;
			}
			set
			{
				if ((this._product_tag != value))
				{
					this._product_tag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_product_decrible", DbType="NVarChar(MAX)")]
		public string product_decrible
		{
			get
			{
				return this._product_decrible;
			}
			set
			{
				if ((this._product_decrible != value))
				{
					this._product_decrible = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.product_img")]
	public partial class product_img
	{
		
		private int _product_id;
		
		private string _product_img_path;
		
		private int _color_id;
		
		public product_img()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_product_id", DbType="Int NOT NULL")]
		public int product_id
		{
			get
			{
				return this._product_id;
			}
			set
			{
				if ((this._product_id != value))
				{
					this._product_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_product_img_path", DbType="VarChar(MAX)")]
		public string product_img_path
		{
			get
			{
				return this._product_img_path;
			}
			set
			{
				if ((this._product_img_path != value))
				{
					this._product_img_path = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_color_id", DbType="Int NOT NULL")]
		public int color_id
		{
			get
			{
				return this._color_id;
			}
			set
			{
				if ((this._color_id != value))
				{
					this._color_id = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.customer")]
	public partial class customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _customer_id;
		
		private string _customer_name;
		
		private string _customer_dob;
		
		private System.Nullable<bool> _customer_gender;
		
		private string _customer_address;
		
		private string _customer_email;
		
		private string _customer_phone;
		
		private string _customer_password;
		
		private System.Nullable<byte> _customer_level;
		
		private System.Nullable<System.DateTime> _time_create;
		
		private System.Nullable<System.DateTime> _last_update;
		
		private EntitySet<cart> _carts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncustomer_idChanging(int value);
    partial void Oncustomer_idChanged();
    partial void Oncustomer_nameChanging(string value);
    partial void Oncustomer_nameChanged();
    partial void Oncustomer_dobChanging(string value);
    partial void Oncustomer_dobChanged();
    partial void Oncustomer_genderChanging(System.Nullable<bool> value);
    partial void Oncustomer_genderChanged();
    partial void Oncustomer_addressChanging(string value);
    partial void Oncustomer_addressChanged();
    partial void Oncustomer_emailChanging(string value);
    partial void Oncustomer_emailChanged();
    partial void Oncustomer_phoneChanging(string value);
    partial void Oncustomer_phoneChanged();
    partial void Oncustomer_passwordChanging(string value);
    partial void Oncustomer_passwordChanged();
    partial void Oncustomer_levelChanging(System.Nullable<byte> value);
    partial void Oncustomer_levelChanged();
    partial void Ontime_createChanging(System.Nullable<System.DateTime> value);
    partial void Ontime_createChanged();
    partial void Onlast_updateChanging(System.Nullable<System.DateTime> value);
    partial void Onlast_updateChanged();
    #endregion
		
		public customer()
		{
			this._carts = new EntitySet<cart>(new Action<cart>(this.attach_carts), new Action<cart>(this.detach_carts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int customer_id
		{
			get
			{
				return this._customer_id;
			}
			set
			{
				if ((this._customer_id != value))
				{
					this.Oncustomer_idChanging(value);
					this.SendPropertyChanging();
					this._customer_id = value;
					this.SendPropertyChanged("customer_id");
					this.Oncustomer_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string customer_name
		{
			get
			{
				return this._customer_name;
			}
			set
			{
				if ((this._customer_name != value))
				{
					this.Oncustomer_nameChanging(value);
					this.SendPropertyChanging();
					this._customer_name = value;
					this.SendPropertyChanged("customer_name");
					this.Oncustomer_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_dob", DbType="VarChar(10)")]
		public string customer_dob
		{
			get
			{
				return this._customer_dob;
			}
			set
			{
				if ((this._customer_dob != value))
				{
					this.Oncustomer_dobChanging(value);
					this.SendPropertyChanging();
					this._customer_dob = value;
					this.SendPropertyChanged("customer_dob");
					this.Oncustomer_dobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_gender", DbType="Bit")]
		public System.Nullable<bool> customer_gender
		{
			get
			{
				return this._customer_gender;
			}
			set
			{
				if ((this._customer_gender != value))
				{
					this.Oncustomer_genderChanging(value);
					this.SendPropertyChanging();
					this._customer_gender = value;
					this.SendPropertyChanged("customer_gender");
					this.Oncustomer_genderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_address", DbType="NVarChar(200)")]
		public string customer_address
		{
			get
			{
				return this._customer_address;
			}
			set
			{
				if ((this._customer_address != value))
				{
					this.Oncustomer_addressChanging(value);
					this.SendPropertyChanging();
					this._customer_address = value;
					this.SendPropertyChanged("customer_address");
					this.Oncustomer_addressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_email", DbType="VarChar(200)")]
		public string customer_email
		{
			get
			{
				return this._customer_email;
			}
			set
			{
				if ((this._customer_email != value))
				{
					this.Oncustomer_emailChanging(value);
					this.SendPropertyChanging();
					this._customer_email = value;
					this.SendPropertyChanged("customer_email");
					this.Oncustomer_emailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_phone", DbType="VarChar(15)")]
		public string customer_phone
		{
			get
			{
				return this._customer_phone;
			}
			set
			{
				if ((this._customer_phone != value))
				{
					this.Oncustomer_phoneChanging(value);
					this.SendPropertyChanging();
					this._customer_phone = value;
					this.SendPropertyChanged("customer_phone");
					this.Oncustomer_phoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_password", DbType="NVarChar(100)")]
		public string customer_password
		{
			get
			{
				return this._customer_password;
			}
			set
			{
				if ((this._customer_password != value))
				{
					this.Oncustomer_passwordChanging(value);
					this.SendPropertyChanging();
					this._customer_password = value;
					this.SendPropertyChanged("customer_password");
					this.Oncustomer_passwordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_level", DbType="TinyInt")]
		public System.Nullable<byte> customer_level
		{
			get
			{
				return this._customer_level;
			}
			set
			{
				if ((this._customer_level != value))
				{
					this.Oncustomer_levelChanging(value);
					this.SendPropertyChanging();
					this._customer_level = value;
					this.SendPropertyChanged("customer_level");
					this.Oncustomer_levelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time_create", DbType="DateTime")]
		public System.Nullable<System.DateTime> time_create
		{
			get
			{
				return this._time_create;
			}
			set
			{
				if ((this._time_create != value))
				{
					this.Ontime_createChanging(value);
					this.SendPropertyChanging();
					this._time_create = value;
					this.SendPropertyChanged("time_create");
					this.Ontime_createChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_update", DbType="DateTime")]
		public System.Nullable<System.DateTime> last_update
		{
			get
			{
				return this._last_update;
			}
			set
			{
				if ((this._last_update != value))
				{
					this.Onlast_updateChanging(value);
					this.SendPropertyChanging();
					this._last_update = value;
					this.SendPropertyChanged("last_update");
					this.Onlast_updateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customer_cart", Storage="_carts", ThisKey="customer_id", OtherKey="customer_id")]
		public EntitySet<cart> carts
		{
			get
			{
				return this._carts;
			}
			set
			{
				this._carts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_carts(cart entity)
		{
			this.SendPropertyChanging();
			entity.customer = this;
		}
		
		private void detach_carts(cart entity)
		{
			this.SendPropertyChanging();
			entity.customer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.cart_detail")]
	public partial class cart_detail
	{
		
		private int _cart_id;
		
		private int _product_id;
		
		private int _quantum;
		
		private int _size_id;
		
		private int _color_id;
		
		public cart_detail()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cart_id", DbType="Int NOT NULL")]
		public int cart_id
		{
			get
			{
				return this._cart_id;
			}
			set
			{
				if ((this._cart_id != value))
				{
					this._cart_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_product_id", DbType="Int NOT NULL")]
		public int product_id
		{
			get
			{
				return this._product_id;
			}
			set
			{
				if ((this._product_id != value))
				{
					this._product_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantum", DbType="Int NOT NULL")]
		public int quantum
		{
			get
			{
				return this._quantum;
			}
			set
			{
				if ((this._quantum != value))
				{
					this._quantum = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_size_id", DbType="Int NOT NULL")]
		public int size_id
		{
			get
			{
				return this._size_id;
			}
			set
			{
				if ((this._size_id != value))
				{
					this._size_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_color_id", DbType="Int NOT NULL")]
		public int color_id
		{
			get
			{
				return this._color_id;
			}
			set
			{
				if ((this._color_id != value))
				{
					this._color_id = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.cart")]
	public partial class cart : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _cart_id;
		
		private int _customer_id;
		
		private System.Nullable<System.DateTime> _time_create;
		
		private System.Nullable<bool> _cart_status;
		
		private EntitySet<bill> _bills;
		
		private EntityRef<customer> _customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncart_idChanging(int value);
    partial void Oncart_idChanged();
    partial void Oncustomer_idChanging(int value);
    partial void Oncustomer_idChanged();
    partial void Ontime_createChanging(System.Nullable<System.DateTime> value);
    partial void Ontime_createChanged();
    partial void Oncart_statusChanging(System.Nullable<bool> value);
    partial void Oncart_statusChanged();
    #endregion
		
		public cart()
		{
			this._bills = new EntitySet<bill>(new Action<bill>(this.attach_bills), new Action<bill>(this.detach_bills));
			this._customer = default(EntityRef<customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cart_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int cart_id
		{
			get
			{
				return this._cart_id;
			}
			set
			{
				if ((this._cart_id != value))
				{
					this.Oncart_idChanging(value);
					this.SendPropertyChanging();
					this._cart_id = value;
					this.SendPropertyChanged("cart_id");
					this.Oncart_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_id", DbType="Int NOT NULL")]
		public int customer_id
		{
			get
			{
				return this._customer_id;
			}
			set
			{
				if ((this._customer_id != value))
				{
					if (this._customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncustomer_idChanging(value);
					this.SendPropertyChanging();
					this._customer_id = value;
					this.SendPropertyChanged("customer_id");
					this.Oncustomer_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time_create", DbType="DateTime")]
		public System.Nullable<System.DateTime> time_create
		{
			get
			{
				return this._time_create;
			}
			set
			{
				if ((this._time_create != value))
				{
					this.Ontime_createChanging(value);
					this.SendPropertyChanging();
					this._time_create = value;
					this.SendPropertyChanged("time_create");
					this.Ontime_createChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cart_status", DbType="Bit")]
		public System.Nullable<bool> cart_status
		{
			get
			{
				return this._cart_status;
			}
			set
			{
				if ((this._cart_status != value))
				{
					this.Oncart_statusChanging(value);
					this.SendPropertyChanging();
					this._cart_status = value;
					this.SendPropertyChanged("cart_status");
					this.Oncart_statusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="cart_bill", Storage="_bills", ThisKey="cart_id", OtherKey="cart_id")]
		public EntitySet<bill> bills
		{
			get
			{
				return this._bills;
			}
			set
			{
				this._bills.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customer_cart", Storage="_customer", ThisKey="customer_id", OtherKey="customer_id", IsForeignKey=true)]
		public customer customer
		{
			get
			{
				return this._customer.Entity;
			}
			set
			{
				customer previousValue = this._customer.Entity;
				if (((previousValue != value) 
							|| (this._customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._customer.Entity = null;
						previousValue.carts.Remove(this);
					}
					this._customer.Entity = value;
					if ((value != null))
					{
						value.carts.Add(this);
						this._customer_id = value.customer_id;
					}
					else
					{
						this._customer_id = default(int);
					}
					this.SendPropertyChanged("customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_bills(bill entity)
		{
			this.SendPropertyChanging();
			entity.cart = this;
		}
		
		private void detach_bills(bill entity)
		{
			this.SendPropertyChanging();
			entity.cart = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.bill")]
	public partial class bill : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _bill_id;
		
		private int _employee_id;
		
		private int _cart_id;
		
		private System.Nullable<System.DateTime> _time_create;
		
		private EntityRef<cart> _cart;
		
		private EntityRef<employee> _employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onbill_idChanging(int value);
    partial void Onbill_idChanged();
    partial void Onemployee_idChanging(int value);
    partial void Onemployee_idChanged();
    partial void Oncart_idChanging(int value);
    partial void Oncart_idChanged();
    partial void Ontime_createChanging(System.Nullable<System.DateTime> value);
    partial void Ontime_createChanged();
    #endregion
		
		public bill()
		{
			this._cart = default(EntityRef<cart>);
			this._employee = default(EntityRef<employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bill_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int bill_id
		{
			get
			{
				return this._bill_id;
			}
			set
			{
				if ((this._bill_id != value))
				{
					this.Onbill_idChanging(value);
					this.SendPropertyChanging();
					this._bill_id = value;
					this.SendPropertyChanged("bill_id");
					this.Onbill_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employee_id", DbType="Int NOT NULL")]
		public int employee_id
		{
			get
			{
				return this._employee_id;
			}
			set
			{
				if ((this._employee_id != value))
				{
					if (this._employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onemployee_idChanging(value);
					this.SendPropertyChanging();
					this._employee_id = value;
					this.SendPropertyChanged("employee_id");
					this.Onemployee_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cart_id", DbType="Int NOT NULL")]
		public int cart_id
		{
			get
			{
				return this._cart_id;
			}
			set
			{
				if ((this._cart_id != value))
				{
					if (this._cart.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncart_idChanging(value);
					this.SendPropertyChanging();
					this._cart_id = value;
					this.SendPropertyChanged("cart_id");
					this.Oncart_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time_create", DbType="DateTime")]
		public System.Nullable<System.DateTime> time_create
		{
			get
			{
				return this._time_create;
			}
			set
			{
				if ((this._time_create != value))
				{
					this.Ontime_createChanging(value);
					this.SendPropertyChanging();
					this._time_create = value;
					this.SendPropertyChanged("time_create");
					this.Ontime_createChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="cart_bill", Storage="_cart", ThisKey="cart_id", OtherKey="cart_id", IsForeignKey=true)]
		public cart cart
		{
			get
			{
				return this._cart.Entity;
			}
			set
			{
				cart previousValue = this._cart.Entity;
				if (((previousValue != value) 
							|| (this._cart.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._cart.Entity = null;
						previousValue.bills.Remove(this);
					}
					this._cart.Entity = value;
					if ((value != null))
					{
						value.bills.Add(this);
						this._cart_id = value.cart_id;
					}
					else
					{
						this._cart_id = default(int);
					}
					this.SendPropertyChanged("cart");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="employee_bill", Storage="_employee", ThisKey="employee_id", OtherKey="employee_id", IsForeignKey=true)]
		public employee employee
		{
			get
			{
				return this._employee.Entity;
			}
			set
			{
				employee previousValue = this._employee.Entity;
				if (((previousValue != value) 
							|| (this._employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._employee.Entity = null;
						previousValue.bills.Remove(this);
					}
					this._employee.Entity = value;
					if ((value != null))
					{
						value.bills.Add(this);
						this._employee_id = value.employee_id;
					}
					else
					{
						this._employee_id = default(int);
					}
					this.SendPropertyChanged("employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
